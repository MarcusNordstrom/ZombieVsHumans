globals [max-humans] ;set maximum numbers of humans

breed [ humans human ] ; Human and
breed [ zombies zombie ] ; zombies are breed of turtles.
breed [ kids kid ] ; Humans kid

humans-own [
  gender          ; 1 = make, 2 = female
  my-group        ; group number the turtles belong to
]



to setup
  ca
  ;ask patches [ set pcolor green]
  create-humans  initial-number-humans;create nbr of human by the slider
  [
  set color red
  set shape "person"
  setxy random-xcor random-ycor
  set my-group -1
  ]
  ask n-of (count humans / 2) humans [set color blue]
  reset-ticks
end

to go
  ask humans
  [
    if my-group != -1  ;; Go "home"
     [ face get-home ]
    lt random 5
    rt random 5
    fd 0.5
  ]
  ;if not any? humans [stop]
  ;if not any? zombies [stop]

  tick
end

to assign-by-size ; button on interface for assign group by size
  ask humans [ set my-group -1 ]
  let unassigned humans

  ;; start with group 0 and loop to build each group
  let current 0
  while [any? unassigned]
  [
    ask n-of (min (list group-size (count unassigned))) unassigned
      [ set my-group current ]
    set current current + 1
    set unassigned unassigned with [my-group = -1]
  ]
end

;; Group the turtles in the patch
to-report get-home
  let side ceiling (sqrt (max [my-group] of turtles + 1))

  report patch
           ;; compute the x coordinate
           (round ((world-width / side) * (my-group mod side)
             + min-pxcor + int (world-width / (side * 2))))
           ;; compute the y coordinate
           (round ((world-height / side) * int (my-group / side)
             + min-pycor + int (world-height / (side * 2))))
  
end